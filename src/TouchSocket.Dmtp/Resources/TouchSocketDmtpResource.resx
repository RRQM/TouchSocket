<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="reader">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the byteBlock can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DmtpRpcActorArgumentNull" xml:space="preserve">
    <value>DmtpRpcActor为空，可能需要启用DmtpRpc插件。</value>
    <comment>DmtpRpcActor为空，可能需要启用DmtpRpc插件。</comment>
  </data>
  <data name="DmtpFileTransferActorNull" xml:space="preserve">
    <value>DmtpFileTransferActor为空，可能需要启用DmtpFileTransfer插件。</value>
    <comment>DmtpFileTransferActor为空，可能需要启用DmtpFileTransfer插件。</comment>
  </data>
  <data name="RedisActorNull" xml:space="preserve">
    <value>RedisActor为空，可能需要启用RedisActor插件。</value>
    <comment>RedisActor为空，可能需要启用RedisActor插件。</comment>
  </data>
  <data name="RemoteAccessActorNull" xml:space="preserve">
    <value>RemoteAccessActor为空，可能需要启用RemoteAccess插件。</value>
    <comment>RemoteAccessActor为空，可能需要启用RemoteAccess插件。</comment>
  </data>
  <data name="RemoteStreamActorNull" xml:space="preserve">
    <value>RemoteStreamActor为空，可能需要启用RemoteStream插件。</value>
    <comment>RemoteStreamActor为空，可能需要启用RemoteStream插件。</comment>
  </data>
  <data name="RoutingNotAllowed" xml:space="preserve">
    <value>不允许路由该包，信息：{0}。</value>
    <comment>不允许路由该包，信息：{0}。</comment>
  </data>
  <data name="RpcMethodNotFind" xml:space="preserve">
    <value>未找到该公共方法，或该方法未标记为Rpc。</value>
    <comment>未找到该公共方法，或该方法未标记为Rpc。</comment>
  </data>
  <data name="RpcMethodDisable" xml:space="preserve">
    <value>方法已被禁用。</value>
    <comment>方法已被禁用。</comment>
  </data>
  <data name="RpcInvokeException" xml:space="preserve">
    <value>函数执行异常，详细信息：{0}。</value>
    <comment>函数执行异常，详细信息：{0}。</comment>
  </data>
  <data name="GetEventArgsFail" xml:space="preserve">
    <value>事件操作器异常。</value>
    <comment>事件操作器异常。</comment>
  </data>
  <data name="SetChannelFail" xml:space="preserve">
    <value>通道设置失败。</value>
    <comment>通道设置失败。</comment>
  </data>
  <data name="ChannelExisted" xml:space="preserve">
    <value>Id为{0}的通道已存在。</value>
    <comment>Id为{0}的通道已存在。</comment>
  </data>
  <data name="RemoteRefuse" xml:space="preserve">
    <value>远程终端拒绝该操作，反馈信息：{0}。</value>
    <comment>远程终端拒绝该操作，反馈信息：{0}。</comment>
  </data>
  <data name="CreateWriteStreamFail" xml:space="preserve">
    <value>从‘{0}’创建写入流失败，信息：{1}。</value>
    <comment>从‘{0}’创建写入流失败，信息：{1}。</comment>
  </data>
  <data name="StreamBucketNull" xml:space="preserve">
    <value>流容器为空。</value>
    <comment>流容器为空。</comment>
  </data>
  <data name="DirectoryExisted" xml:space="preserve">
    <value>目录‘{0}’已存在。</value>
    <comment>目录‘{0}’已存在。</comment>
  </data>
  <data name="FileExisted" xml:space="preserve">
    <value>文件‘{0}’已存在。</value>
    <comment>文件‘{0}’已存在。</comment>
  </data>
  <data name="FileNotExists" xml:space="preserve">
    <value>文件‘{0}’不存在。</value>
    <comment>文件‘{0}’不存在。</comment>
  </data>
  <data name="DirectoryNotExists" xml:space="preserve">
    <value>目录‘{0}’不存在。</value>
    <comment>目录‘{0}’不存在。</comment>
  </data>
  <data name="ResourceHandleNotFind" xml:space="preserve">
    <value>资源句柄{0}对应的资源没有找到，可能操作已超时。</value>
    <comment>资源句柄{0}对应的资源没有找到，可能操作已超时。</comment>
  </data>
  <data name="HasUnFinished" xml:space="preserve">
    <value>还有{0}个资源没有完成。</value>
    <comment>还有{0}个资源没有完成。</comment>
  </data>
  <data name="FileLengthTooLong" xml:space="preserve">
    <value>文件长度太长。</value>
    <comment>文件长度太长。</comment>
  </data>
  <data name="LengthErrorWhenRead" xml:space="preserve">
    <value>读取文件长度错误。</value>
    <comment>读取文件长度错误。</comment>
  </data>
</root>