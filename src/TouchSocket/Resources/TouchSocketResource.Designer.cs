//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TouchSocket.Resources {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class TouchSocketResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TouchSocketResource() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TouchSocket.Resources.TouchSocketResource", typeof(TouchSocketResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 The current adapter is empty or does not support sending objects (IRequestInfo). 的本地化字符串。
        /// </summary>
        public static string CannotSendRequestInfo {
            get {
                return ResourceManager.GetString("CannotSendRequestInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The client is not connected. 的本地化字符串。
        /// </summary>
        public static string ClientNotConnected {
            get {
                return ResourceManager.GetString("ClientNotConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 No client with Id &apos;{0}&apos; was found. 的本地化字符串。
        /// </summary>
        public static string ClientNotFind {
            get {
                return ResourceManager.GetString("ClientNotFind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The number of connected clients has reached the maximum set value ({0}). 的本地化字符串。
        /// </summary>
        public static string ConnectedMaximum {
            get {
                return ResourceManager.GetString("ConnectedMaximum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Call Dispose to actively disconnect. 的本地化字符串。
        /// </summary>
        public static string DisposeClose {
            get {
                return ResourceManager.GetString("DisposeClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The client with ID &apos;{0}&apos; already exists. 的本地化字符串。
        /// </summary>
        public static string IdAlreadyExists {
            get {
                return ResourceManager.GetString("IdAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Incomplete data transmission. 的本地化字符串。
        /// </summary>
        public static string IncompleteDataTransmission {
            get {
                return ResourceManager.GetString("IncompleteDataTransmission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Start polling based reconnection, with an interval of {0}. 的本地化字符串。
        /// </summary>
        public static string PollingBegin {
            get {
                return ResourceManager.GetString("PollingBegin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Polling reconnection has ended 的本地化字符串。
        /// </summary>
        public static string PollingEnd {
            get {
                return ResourceManager.GetString("PollingEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Polling style reconnection is about to exit, reason: reconnection plugin has been disposed 的本地化字符串。
        /// </summary>
        public static string PollingWillEnd {
            get {
                return ResourceManager.GetString("PollingWillEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The remote terminal actively disconnects. 的本地化字符串。
        /// </summary>
        public static string RemoteDisconnects {
            get {
                return ResourceManager.GetString("RemoteDisconnects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The new socket must be in a connected state. 的本地化字符串。
        /// </summary>
        public static string SocketHaveToConnected {
            get {
                return ResourceManager.GetString("SocketHaveToConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 No data interaction due to timeout, actively disconnect. 的本地化字符串。
        /// </summary>
        public static string TimedoutWithoutAll {
            get {
                return ResourceManager.GetString("TimedoutWithoutAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 No data received interaction due to timeout, actively disconnected. 的本地化字符串。
        /// </summary>
        public static string TimedoutWithoutReceiving {
            get {
                return ResourceManager.GetString("TimedoutWithoutReceiving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Send interaction with no data due to timeout, actively disconnect. 的本地化字符串。
        /// </summary>
        public static string TimedoutWithoutSending {
            get {
                return ResourceManager.GetString("TimedoutWithoutSending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Udp is not running. 的本地化字符串。
        /// </summary>
        public static string UdpStopped {
            get {
                return ResourceManager.GetString("UdpStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Unable to obtain endpoint. 的本地化字符串。
        /// </summary>
        public static string UnableToObtainEndpoint {
            get {
                return ResourceManager.GetString("UnableToObtainEndpoint", resourceCulture);
            }
        }
    }
}
