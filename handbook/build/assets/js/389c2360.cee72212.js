"use strict";(self.webpackChunktouchsocket=self.webpackChunktouchsocket||[]).push([[1687],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),y=u(n),d=o,p=y["".concat(c,".").concat(d)]||y[d]||m[d]||a;return n?r.createElement(p,s(s({ref:t},l),{},{components:n})):r.createElement(p,s({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=y;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var u=2;u<a;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},4873:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={id:"stategridtransmission",title:"\u56fd\u7f51\u8f93\u7535i1\u6807\u51c6\u7248"},s=void 0,i={unversionedId:"stategridtransmission",id:"stategridtransmission",title:"\u56fd\u7f51\u8f93\u7535i1\u6807\u51c6\u7248",description:"\u8bf4\u660e",source:"@site/docs/stategridtransmission.mdx",sourceDirName:".",slug:"/stategridtransmission",permalink:"/touchsocket/docs/stategridtransmission",draft:!1,editUrl:"https://gitee.com/rrqm_home/touchsocket/tree/master/handbook/docs/stategridtransmission.mdx",tags:[],version:"current",lastUpdatedBy:"\u82e5\u6c5d\u68cb\u8317",lastUpdatedAt:1675770803,formattedLastUpdatedAt:"Feb 7, 2023",frontMatter:{id:"stategridtransmission",title:"\u56fd\u7f51\u8f93\u7535i1\u6807\u51c6\u7248"},sidebar:"docs",previous:{title:"\u8bf4\u660e",permalink:"/touchsocket/docs/adapterdemodescription"},next:{title:"Modbus\u534f\u8bae",permalink:"/touchsocket/docs/adaptermodbus"}},c={},u=[{value:"\u8bf4\u660e",id:"\u8bf4\u660e",level:2},{value:"\u7248\u6743",id:"\u7248\u6743",level:2},{value:"\u534f\u8bae\u7c7b\u578b",id:"\u534f\u8bae\u7c7b\u578b",level:2},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:2}],l={toc:u};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"\u8bf4\u660e"},"\u8bf4\u660e"),(0,o.kt)("p",null,"\u672c\u4ee3\u7801\u4ec5\u9002\u7528\u4ee5\u4e0b\u534f\u8bae\u3002\n\u534f\u8bae\u4e2d\uff0c\u7531Packet","_","Length\u8868\u793a\u5e8f\u53f77-11\u7684\u957f\u5ea6\u3002\u4e5f\u5c31\u662fPacket","_","Length=N+2+2+1+1\u3002\n\u4f46\u662f\u5728\u8bbe\u8ba1\u65f6\uff0c\u4f1a\u5c06\u5e8f\u53f71-10\uff0c\u89c6\u4e3a\u56fa\u5b9a\u5305\u5934\u3002\u5e8f\u53f711-13\u4e3aBody\u3002"),(0,o.kt)("h2",{id:"\u7248\u6743"},"\u7248\u6743"),(0,o.kt)("p",null,"\u8be5\u4ee3\u7801\u6240\u6709\u7248\u6743\u5f52\u82e5\u6c5d\u68cb\u8317\u6240\u6709\uff0c\u4f7f\u7528\u65f6\u8bf7\u52a1\u5fc5\u6ce8\u660e\u3002"),(0,o.kt)("h2",{id:"\u534f\u8bae\u7c7b\u578b"},"\u534f\u8bae\u7c7b\u578b"),(0,o.kt)("h2",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"using TouchSocket.Core;\nusing TouchSocket.Sockets;\n\nnamespace AdapterConsoleApp\n{\n    /// <summary>\n    /// \u56fd\u7f51\u8f93\u7535i1\u6807\u51c6\u7248\n    /// </summary>\n    internal class SGCCCustomDataHandlingAdapter : CustomFixedHeaderDataHandlingAdapter<SGCCRequestInfo>\n    {\n        public override int HeaderLength => 30;\n\n        public override bool CanSendRequestInfo => false;\n\n        protected override SGCCRequestInfo GetInstance()\n        {\n            return new SGCCRequestInfo();\n        }\n\n        protected override void PreviewSend(IRequestInfo requestInfo)\n        {\n            throw new System.NotImplementedException();\n        }\n    }\n\n    public class SGCCRequestInfo : IFixedHeaderRequestInfo\n    {\n        private byte[] m_sync;\n        private int m_bodyLength;\n        private byte[] m_cMDID;\n        private byte[] m_sample;\n        private byte[] m_cRC16;\n\n        public int BodyLength { get => m_bodyLength; }\n\n        /// <summary>\n        /// \u62a5\u6587\u5934:5AA5\n        /// </summary>\n        public byte[] Sync { get => m_sync; set => m_sync = value; }\n\n        /// <summary>\n        /// \u62a5\u6587\u957f\u5ea6\n        /// </summary>\n        public ushort PacketLength { get => (ushort)(this.m_bodyLength - 3); }\n\n        /// <summary>\n        /// \u72b6\u6001\u76d1\u6d4b\u88c5\u7f6eID(17\u4f4d\u7f16\u7801)\n        /// </summary>\n        public byte[] CMDID { get => m_cMDID; set => m_cMDID = value; }\n\n        /// <summary>\n        /// \u5e27\u7c7b\u578b\u2014\u53c2\u8003\u9644\u8868C8-1\u76f8\u5173\u542b\u4e49\n        /// </summary>\n        public byte FrameType { get; set; }\n\n        /// <summary>\n        /// \u62a5\u6587\u7c7b\u578b\u2014\u53c2\u8003\u9644\u8868C8-2\u76f8\u5173\u542b\u4e49\n        /// </summary>\n        public byte PacketType { get; set; }\n\n        /// <summary>\n        /// \u5e27\u5e8f\u5217\u53f7\uff08\u65e0\u7b26\u53f7\u6574\u6570)\n        /// </summary>\n        public byte FrameNo { get; set; }\n\n        /// <summary>\n        /// \u901a\u9053\u53f7\u2014\u8868\u793a\u91c7\u96c6\u88c5\u7f6e\u4e0a\u7684\u6444\u50cf\u673a\u7f16\u53f7\u3002\u5982:\u4e00\u4e2a\u88c5\u8fde\u63a5\u2489\u90e8\u6444\u50cf\u673a\uff0c\u5219\u5206\u522b\u6807\u53f7\u4e3a1\u30012\n        /// </summary>\n        public byte ChannelNo { get; set; }\n\n        /// <summary>\n        /// \u9884\u7f6e\u4f4d\u53f7\u2014\u5373\u4e91\u53f0\u6444\u50cf\u6240\u8bbe\u7f6e\u7684\u9884\u7f6e\u4f4d\u53f7,\u4e0d\u5e26\u4e91\u53f0\u6444\u50cf\u673a\uff0c\u9884\u7f6e\u4f4d\u53f7\u4e3a255\n        /// </summary>\n        public byte PresettingNo { get; set; }\n\n        /// <summary>\n        /// \u603b\u5305\u6570\uff08\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u53d6\u503c\u8303\u56f4:\u5927\u4e8e\u7b49\u4e8e0)\n        /// </summary>\n        public ushort PacketNo { get; set; }\n\n        /// <summary>\n        /// \u5b50\u5305\u5305\u53f7\uff08\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u53d6\u503c\u8303\u56f4:\u5927\u4e8e\u7b49\u4e8e0>\n        /// </summary>\n        public ushort SubpacketNo { get; set; }\n\n        /// <summary>\n        /// \u6570\u636e\u533a\n        /// </summary>\n        public byte[] Sample { get => m_sample; set => m_sample = value; }\n\n        /// <summary>\n        /// \u6821\u9a8c\u4f4d\n        /// </summary>\n        public byte[] CRC16 { get => m_cRC16; }\n\n        /// <summary>\n        /// \u62a5\u6587\u5c3e:0x96\n        /// </summary>\n        public byte End { get; set; }\n\n        public bool OnParsingHeader(byte[] header)\n        {\n            if (header.Length == 30)\n            {\n                using (ByteBlock byteBlock = new ByteBlock(header))\n                {\n                    byteBlock.Pos = 0;\n                    byteBlock.Read(out m_sync, 2);\n\n                    byte[] lenBuffer;\n                    byteBlock.Read(out lenBuffer, 2);\n\n                    this.m_bodyLength = TouchSocketBitConverter.LittleEndian.ToUInt16(lenBuffer, 0) + 3 - 6;//\u5148\u628acrc\u6821\u9a8c\u548cend\u90fd\u83b7\u53d6\u3002\n                    byteBlock.Read(out m_cMDID, 17);\n                    this.FrameType = (byte)byteBlock.ReadByte();\n                    this.PacketType = (byte)byteBlock.ReadByte();\n                    this.FrameNo = (byte)byteBlock.ReadByte();\n                    this.ChannelNo = (byte)byteBlock.ReadByte();\n                    this.PresettingNo = (byte)byteBlock.ReadByte();\n                    this.PacketNo = byteBlock.ReadUInt16();\n                    this.SubpacketNo = byteBlock.ReadUInt16();\n\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        public bool OnParsingBody(byte[] body)\n        {\n            if (body.Length == this.BodyLength && body[^1] == 150)\n            {\n                using (ByteBlock byteBlock = new ByteBlock(body))\n                {\n                    byteBlock.Read(out this.m_sample, this.m_bodyLength - 3);\n                    byteBlock.Read(out this.m_cRC16, 2);\n                    this.End = (byte)byteBlock.ReadByte();\n                }\n                return true;\n            }\n            return false;\n        }\n    }\n}\n")))}m.isMDXComponent=!0}}]);